
// 공통 상수
float4x4    g_WorldMatrix;
float4x4    g_ViewMatrix;
float4x4    g_ProjMatrix;

texture g_BaseTexture;
sampler2D g_BaseSampler = sampler_state {
    Texture = <g_BaseTexture>;
    MinFilter = LINEAR;
    MagFilter = LINEAR;
    MipFilter = LINEAR;
};



// VS 입력 구조체
struct VS_INPUT {
    float4 Pos : POSITION;
    float2 Tex : TEXCOORD0;
};

// VS 출력 구조체
struct VS_OUTPUT {
    float4 Pos : POSITION;
    float2 Tex : TEXCOORD2;
};


// 정점 셰이더
VS_OUTPUT VS_Main(VS_INPUT input) {
    VS_OUTPUT output;

    float4 LocalPos = input.Pos;

    output.Pos = mul(input.Pos, g_WorldMatrix);
    output.Pos = mul(output.Pos , g_ViewMatrix);
    output.Pos = mul(output.Pos, g_ProjMatrix);

    output.Tex = input.Tex;
    return output;
}


// 픽셀 셰이더
float4 PS_Main(VS_OUTPUT input) : COLOR {
    
    float2 Tex = input.Tex;
    
    float4 texColor = tex2D(g_BaseSampler, Tex);
    
    texColor.a *= 0.5f;

    return texColor;
}
